var page2md = (() => {
  var et = Object.create;
  var G = Object.defineProperty;
  var tt = Object.getOwnPropertyDescriptor;
  var rt = Object.getOwnPropertyNames;
  var it = Object.getPrototypeOf,
    nt = Object.prototype.hasOwnProperty;
  var U = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports),
    at = (e, t) => {
      for (var r in t) G(e, r, { get: t[r], enumerable: !0 });
    },
    _e = (e, t, r, i) => {
      if ((t && typeof t == "object") || typeof t == "function")
        for (let a of rt(t))
          !nt.call(e, a) && a !== r && G(e, a, { get: () => t[a], enumerable: !(i = tt(t, a)) || i.enumerable });
      return e;
    };
  var Ne = (e, t, r) => (
      (r = e != null ? et(it(e)) : {}),
      _e(t || !e || !e.__esModule ? G(r, "default", { value: e, enumerable: !0 }) : r, e)
    ),
    st = (e) => _e(G({}, "__esModule", { value: !0 }), e);
  var Ee = U((qt, Q) => {
    function pe(e, t) {
      if (t && t.documentElement) (e = t), (t = arguments[2]);
      else if (!e || !e.documentElement)
        throw new Error("First argument to Readability constructor should be a document object.");
      if (
        ((t = t || {}),
        (this._doc = e),
        (this._docJSDOMParser = this._doc.firstChild.__JSDOMParser__),
        (this._articleTitle = null),
        (this._articleByline = null),
        (this._articleDir = null),
        (this._articleSiteName = null),
        (this._attempts = []),
        (this._debug = !!t.debug),
        (this._maxElemsToParse = t.maxElemsToParse || this.DEFAULT_MAX_ELEMS_TO_PARSE),
        (this._nbTopCandidates = t.nbTopCandidates || this.DEFAULT_N_TOP_CANDIDATES),
        (this._charThreshold = t.charThreshold || this.DEFAULT_CHAR_THRESHOLD),
        (this._classesToPreserve = this.CLASSES_TO_PRESERVE.concat(t.classesToPreserve || [])),
        (this._keepClasses = !!t.keepClasses),
        (this._serializer =
          t.serializer ||
          function (r) {
            return r.innerHTML;
          }),
        (this._disableJSONLD = !!t.disableJSONLD),
        (this._allowedVideoRegex = t.allowedVideoRegex || this.REGEXPS.videos),
        (this._flags = this.FLAG_STRIP_UNLIKELYS | this.FLAG_WEIGHT_CLASSES | this.FLAG_CLEAN_CONDITIONALLY),
        this._debug)
      ) {
        let r = function (i) {
          if (i.nodeType == i.TEXT_NODE) return `${i.nodeName} ("${i.textContent}")`;
          let a = Array.from(i.attributes || [], function (n) {
            return `${n.name}="${n.value}"`;
          }).join(" ");
          return `<${i.localName} ${a}>`;
        };
        this.log = function () {
          if (typeof console < "u") {
            let a = Array.from(arguments, (n) => (n && n.nodeType == this.ELEMENT_NODE ? r(n) : n));
            a.unshift("Reader: (Readability)"), console.log.apply(console, a);
          } else if (typeof dump < "u") {
            var i = Array.prototype.map
              .call(arguments, function (a) {
                return a && a.nodeName ? r(a) : a;
              })
              .join(" ");
            dump(
              "Reader: (Readability) " +
                i +
                `
`,
            );
          }
        };
      } else this.log = function () {};
    }
    pe.prototype = {
      FLAG_STRIP_UNLIKELYS: 1,
      FLAG_WEIGHT_CLASSES: 2,
      FLAG_CLEAN_CONDITIONALLY: 4,
      ELEMENT_NODE: 1,
      TEXT_NODE: 3,
      DEFAULT_MAX_ELEMS_TO_PARSE: 0,
      DEFAULT_N_TOP_CANDIDATES: 5,
      DEFAULT_TAGS_TO_SCORE: "section,h2,h3,h4,h5,h6,p,td,pre".toUpperCase().split(","),
      DEFAULT_CHAR_THRESHOLD: 500,
      REGEXPS: {
        unlikelyCandidates:
          /-ad-|ai2html|banner|breadcrumbs|combx|comment|community|cover-wrap|disqus|extra|footer|gdpr|header|legends|menu|related|remark|replies|rss|shoutbox|sidebar|skyscraper|social|sponsor|supplemental|ad-break|agegate|pagination|pager|popup|yom-remote/i,
        okMaybeItsACandidate: /and|article|body|column|content|main|shadow/i,
        positive: /article|body|content|entry|hentry|h-entry|main|page|pagination|post|text|blog|story/i,
        negative:
          /-ad-|hidden|^hid$| hid$| hid |^hid |banner|combx|comment|com-|contact|foot|footer|footnote|gdpr|masthead|media|meta|outbrain|promo|related|scroll|share|shoutbox|sidebar|skyscraper|sponsor|shopping|tags|tool|widget/i,
        extraneous: /print|archive|comment|discuss|e[\-]?mail|share|reply|all|login|sign|single|utility/i,
        byline: /byline|author|dateline|writtenby|p-author/i,
        replaceFonts: /<(\/?)font[^>]*>/gi,
        normalize: /\s{2,}/g,
        videos:
          /\/\/(www\.)?((dailymotion|youtube|youtube-nocookie|player\.vimeo|v\.qq)\.com|(archive|upload\.wikimedia)\.org|player\.twitch\.tv)/i,
        shareElements: /(\b|_)(share|sharedaddy)(\b|_)/i,
        nextLink: /(next|weiter|continue|>([^\|]|$)|»([^\|]|$))/i,
        prevLink: /(prev|earl|old|new|<|«)/i,
        tokenize: /\W+/g,
        whitespace: /^\s*$/,
        hasContent: /\S$/,
        hashUrl: /^#.+/,
        srcsetUrl: /(\S+)(\s+[\d.]+[xw])?(\s*(?:,|$))/g,
        b64DataUrl: /^data:\s*([^\s;,]+)\s*;\s*base64\s*,/i,
        commas: /\u002C|\u060C|\uFE50|\uFE10|\uFE11|\u2E41|\u2E34|\u2E32|\uFF0C/g,
        jsonLdArticleTypes:
          /^Article|AdvertiserContentArticle|NewsArticle|AnalysisNewsArticle|AskPublicNewsArticle|BackgroundNewsArticle|OpinionNewsArticle|ReportageNewsArticle|ReviewNewsArticle|Report|SatiricalArticle|ScholarlyArticle|MedicalScholarlyArticle|SocialMediaPosting|BlogPosting|LiveBlogPosting|DiscussionForumPosting|TechArticle|APIReference$/,
      },
      UNLIKELY_ROLES: ["menu", "menubar", "complementary", "navigation", "alert", "alertdialog", "dialog"],
      DIV_TO_P_ELEMS: new Set(["BLOCKQUOTE", "DL", "DIV", "IMG", "OL", "P", "PRE", "TABLE", "UL"]),
      ALTER_TO_DIV_EXCEPTIONS: ["DIV", "ARTICLE", "SECTION", "P"],
      PRESENTATIONAL_ATTRIBUTES: [
        "align",
        "background",
        "bgcolor",
        "border",
        "cellpadding",
        "cellspacing",
        "frame",
        "hspace",
        "rules",
        "style",
        "valign",
        "vspace",
      ],
      DEPRECATED_SIZE_ATTRIBUTE_ELEMS: ["TABLE", "TH", "TD", "HR", "PRE"],
      PHRASING_ELEMS: [
        "ABBR",
        "AUDIO",
        "B",
        "BDO",
        "BR",
        "BUTTON",
        "CITE",
        "CODE",
        "DATA",
        "DATALIST",
        "DFN",
        "EM",
        "EMBED",
        "I",
        "IMG",
        "INPUT",
        "KBD",
        "LABEL",
        "MARK",
        "MATH",
        "METER",
        "NOSCRIPT",
        "OBJECT",
        "OUTPUT",
        "PROGRESS",
        "Q",
        "RUBY",
        "SAMP",
        "SCRIPT",
        "SELECT",
        "SMALL",
        "SPAN",
        "STRONG",
        "SUB",
        "SUP",
        "TEXTAREA",
        "TIME",
        "VAR",
        "WBR",
      ],
      CLASSES_TO_PRESERVE: ["page"],
      HTML_ESCAPE_MAP: { lt: "<", gt: ">", amp: "&", quot: '"', apos: "'" },
      _postProcessContent: function (e) {
        this._fixRelativeUris(e), this._simplifyNestedElements(e), this._keepClasses || this._cleanClasses(e);
      },
      _removeNodes: function (e, t) {
        if (this._docJSDOMParser && e._isLiveNodeList) throw new Error("Do not pass live node lists to _removeNodes");
        for (var r = e.length - 1; r >= 0; r--) {
          var i = e[r],
            a = i.parentNode;
          a && (!t || t.call(this, i, r, e)) && a.removeChild(i);
        }
      },
      _replaceNodeTags: function (e, t) {
        if (this._docJSDOMParser && e._isLiveNodeList)
          throw new Error("Do not pass live node lists to _replaceNodeTags");
        for (let r of e) this._setNodeTag(r, t);
      },
      _forEachNode: function (e, t) {
        Array.prototype.forEach.call(e, t, this);
      },
      _findNode: function (e, t) {
        return Array.prototype.find.call(e, t, this);
      },
      _someNode: function (e, t) {
        return Array.prototype.some.call(e, t, this);
      },
      _everyNode: function (e, t) {
        return Array.prototype.every.call(e, t, this);
      },
      _concatNodeLists: function () {
        var e = Array.prototype.slice,
          t = e.call(arguments),
          r = t.map(function (i) {
            return e.call(i);
          });
        return Array.prototype.concat.apply([], r);
      },
      _getAllNodesWithTag: function (e, t) {
        return e.querySelectorAll
          ? e.querySelectorAll(t.join(","))
          : [].concat.apply(
              [],
              t.map(function (r) {
                var i = e.getElementsByTagName(r);
                return Array.isArray(i) ? i : Array.from(i);
              }),
            );
      },
      _cleanClasses: function (e) {
        var t = this._classesToPreserve,
          r = (e.getAttribute("class") || "")
            .split(/\s+/)
            .filter(function (i) {
              return t.indexOf(i) != -1;
            })
            .join(" ");
        for (
          r ? e.setAttribute("class", r) : e.removeAttribute("class"), e = e.firstElementChild;
          e;
          e = e.nextElementSibling
        )
          this._cleanClasses(e);
      },
      _fixRelativeUris: function (e) {
        var t = this._doc.baseURI,
          r = this._doc.documentURI;
        function i(s) {
          if (t == r && s.charAt(0) == "#") return s;
          try {
            return new URL(s, t).href;
          } catch {}
          return s;
        }
        var a = this._getAllNodesWithTag(e, ["a"]);
        this._forEachNode(a, function (s) {
          var o = s.getAttribute("href");
          if (o)
            if (o.indexOf("javascript:") === 0)
              if (s.childNodes.length === 1 && s.childNodes[0].nodeType === this.TEXT_NODE) {
                var c = this._doc.createTextNode(s.textContent);
                s.parentNode.replaceChild(c, s);
              } else {
                for (var l = this._doc.createElement("span"); s.firstChild; ) l.appendChild(s.firstChild);
                s.parentNode.replaceChild(l, s);
              }
            else s.setAttribute("href", i(o));
        });
        var n = this._getAllNodesWithTag(e, ["img", "picture", "figure", "video", "audio", "source"]);
        this._forEachNode(n, function (s) {
          var o = s.getAttribute("src"),
            c = s.getAttribute("poster"),
            l = s.getAttribute("srcset");
          if ((o && s.setAttribute("src", i(o)), c && s.setAttribute("poster", i(c)), l)) {
            var h = l.replace(this.REGEXPS.srcsetUrl, function (m, T, _, p) {
              return i(T) + (_ || "") + p;
            });
            s.setAttribute("srcset", h);
          }
        });
      },
      _simplifyNestedElements: function (e) {
        for (var t = e; t; ) {
          if (t.parentNode && ["DIV", "SECTION"].includes(t.tagName) && !(t.id && t.id.startsWith("readability"))) {
            if (this._isElementWithoutContent(t)) {
              t = this._removeAndGetNext(t);
              continue;
            } else if (this._hasSingleTagInsideElement(t, "DIV") || this._hasSingleTagInsideElement(t, "SECTION")) {
              for (var r = t.children[0], i = 0; i < t.attributes.length; i++)
                r.setAttribute(t.attributes[i].name, t.attributes[i].value);
              t.parentNode.replaceChild(r, t), (t = r);
              continue;
            }
          }
          t = this._getNextNode(t);
        }
      },
      _getArticleTitle: function () {
        var e = this._doc,
          t = "",
          r = "";
        try {
          (t = r = e.title.trim()),
            typeof t != "string" && (t = r = this._getInnerText(e.getElementsByTagName("title")[0]));
        } catch {}
        var i = !1;
        function a(h) {
          return h.split(/\s+/).length;
        }
        if (/ [\|\-\\\/>»] /.test(t))
          (i = / [\\\/>»] /.test(t)),
            (t = r.replace(/(.*)[\|\-\\\/>»] .*/gi, "$1")),
            a(t) < 3 && (t = r.replace(/[^\|\-\\\/>»]*[\|\-\\\/>»](.*)/gi, "$1"));
        else if (t.indexOf(": ") !== -1) {
          var n = this._concatNodeLists(e.getElementsByTagName("h1"), e.getElementsByTagName("h2")),
            s = t.trim(),
            o = this._someNode(n, function (h) {
              return h.textContent.trim() === s;
            });
          o ||
            ((t = r.substring(r.lastIndexOf(":") + 1)),
            a(t) < 3 ? (t = r.substring(r.indexOf(":") + 1)) : a(r.substr(0, r.indexOf(":"))) > 5 && (t = r));
        } else if (t.length > 150 || t.length < 15) {
          var c = e.getElementsByTagName("h1");
          c.length === 1 && (t = this._getInnerText(c[0]));
        }
        t = t.trim().replace(this.REGEXPS.normalize, " ");
        var l = a(t);
        return l <= 4 && (!i || l != a(r.replace(/[\|\-\\\/>»]+/g, "")) - 1) && (t = r), t;
      },
      _prepDocument: function () {
        var e = this._doc;
        this._removeNodes(this._getAllNodesWithTag(e, ["style"])),
          e.body && this._replaceBrs(e.body),
          this._replaceNodeTags(this._getAllNodesWithTag(e, ["font"]), "SPAN");
      },
      _nextNode: function (e) {
        for (var t = e; t && t.nodeType != this.ELEMENT_NODE && this.REGEXPS.whitespace.test(t.textContent); )
          t = t.nextSibling;
        return t;
      },
      _replaceBrs: function (e) {
        this._forEachNode(this._getAllNodesWithTag(e, ["br"]), function (t) {
          for (var r = t.nextSibling, i = !1; (r = this._nextNode(r)) && r.tagName == "BR"; ) {
            i = !0;
            var a = r.nextSibling;
            r.parentNode.removeChild(r), (r = a);
          }
          if (i) {
            var n = this._doc.createElement("p");
            for (t.parentNode.replaceChild(n, t), r = n.nextSibling; r; ) {
              if (r.tagName == "BR") {
                var s = this._nextNode(r.nextSibling);
                if (s && s.tagName == "BR") break;
              }
              if (!this._isPhrasingContent(r)) break;
              var o = r.nextSibling;
              n.appendChild(r), (r = o);
            }
            for (; n.lastChild && this._isWhitespace(n.lastChild); ) n.removeChild(n.lastChild);
            n.parentNode.tagName === "P" && this._setNodeTag(n.parentNode, "DIV");
          }
        });
      },
      _setNodeTag: function (e, t) {
        if ((this.log("_setNodeTag", e, t), this._docJSDOMParser))
          return (e.localName = t.toLowerCase()), (e.tagName = t.toUpperCase()), e;
        for (var r = e.ownerDocument.createElement(t); e.firstChild; ) r.appendChild(e.firstChild);
        e.parentNode.replaceChild(r, e), e.readability && (r.readability = e.readability);
        for (var i = 0; i < e.attributes.length; i++)
          try {
            r.setAttribute(e.attributes[i].name, e.attributes[i].value);
          } catch {}
        return r;
      },
      _prepArticle: function (e) {
        this._cleanStyles(e),
          this._markDataTables(e),
          this._fixLazyImages(e),
          this._cleanConditionally(e, "form"),
          this._cleanConditionally(e, "fieldset"),
          this._clean(e, "object"),
          this._clean(e, "embed"),
          this._clean(e, "footer"),
          this._clean(e, "link"),
          this._clean(e, "aside");
        var t = this.DEFAULT_CHAR_THRESHOLD;
        this._forEachNode(e.children, function (r) {
          this._cleanMatchedNodes(r, function (i, a) {
            return this.REGEXPS.shareElements.test(a) && i.textContent.length < t;
          });
        }),
          this._clean(e, "iframe"),
          this._clean(e, "input"),
          this._clean(e, "textarea"),
          this._clean(e, "select"),
          this._clean(e, "button"),
          this._cleanHeaders(e),
          this._cleanConditionally(e, "table"),
          this._cleanConditionally(e, "ul"),
          this._cleanConditionally(e, "div"),
          this._replaceNodeTags(this._getAllNodesWithTag(e, ["h1"]), "h2"),
          this._removeNodes(this._getAllNodesWithTag(e, ["p"]), function (r) {
            var i = r.getElementsByTagName("img").length,
              a = r.getElementsByTagName("embed").length,
              n = r.getElementsByTagName("object").length,
              s = r.getElementsByTagName("iframe").length,
              o = i + a + n + s;
            return o === 0 && !this._getInnerText(r, !1);
          }),
          this._forEachNode(this._getAllNodesWithTag(e, ["br"]), function (r) {
            var i = this._nextNode(r.nextSibling);
            i && i.tagName == "P" && r.parentNode.removeChild(r);
          }),
          this._forEachNode(this._getAllNodesWithTag(e, ["table"]), function (r) {
            var i = this._hasSingleTagInsideElement(r, "TBODY") ? r.firstElementChild : r;
            if (this._hasSingleTagInsideElement(i, "TR")) {
              var a = i.firstElementChild;
              if (this._hasSingleTagInsideElement(a, "TD")) {
                var n = a.firstElementChild;
                (n = this._setNodeTag(n, this._everyNode(n.childNodes, this._isPhrasingContent) ? "P" : "DIV")),
                  r.parentNode.replaceChild(n, r);
              }
            }
          });
      },
      _initializeNode: function (e) {
        switch (((e.readability = { contentScore: 0 }), e.tagName)) {
          case "DIV":
            e.readability.contentScore += 5;
            break;
          case "PRE":
          case "TD":
          case "BLOCKQUOTE":
            e.readability.contentScore += 3;
            break;
          case "ADDRESS":
          case "OL":
          case "UL":
          case "DL":
          case "DD":
          case "DT":
          case "LI":
          case "FORM":
            e.readability.contentScore -= 3;
            break;
          case "H1":
          case "H2":
          case "H3":
          case "H4":
          case "H5":
          case "H6":
          case "TH":
            e.readability.contentScore -= 5;
            break;
        }
        e.readability.contentScore += this._getClassWeight(e);
      },
      _removeAndGetNext: function (e) {
        var t = this._getNextNode(e, !0);
        return e.parentNode.removeChild(e), t;
      },
      _getNextNode: function (e, t) {
        if (!t && e.firstElementChild) return e.firstElementChild;
        if (e.nextElementSibling) return e.nextElementSibling;
        do e = e.parentNode;
        while (e && !e.nextElementSibling);
        return e && e.nextElementSibling;
      },
      _textSimilarity: function (e, t) {
        var r = e.toLowerCase().split(this.REGEXPS.tokenize).filter(Boolean),
          i = t.toLowerCase().split(this.REGEXPS.tokenize).filter(Boolean);
        if (!r.length || !i.length) return 0;
        var a = i.filter((s) => !r.includes(s)),
          n = a.join(" ").length / i.join(" ").length;
        return 1 - n;
      },
      _checkByline: function (e, t) {
        if (this._articleByline) return !1;
        if (e.getAttribute !== void 0)
          var r = e.getAttribute("rel"),
            i = e.getAttribute("itemprop");
        return (r === "author" || (i && i.indexOf("author") !== -1) || this.REGEXPS.byline.test(t)) &&
          this._isValidByline(e.textContent)
          ? ((this._articleByline = e.textContent.trim()), !0)
          : !1;
      },
      _getNodeAncestors: function (e, t) {
        t = t || 0;
        for (var r = 0, i = []; e.parentNode && (i.push(e.parentNode), !(t && ++r === t)); ) e = e.parentNode;
        return i;
      },
      _grabArticle: function (e) {
        this.log("**** grabArticle ****");
        var t = this._doc,
          r = e !== null;
        if (((e = e || this._doc.body), !e)) return this.log("No body found in document. Abort."), null;
        for (var i = e.innerHTML; ; ) {
          this.log("Starting grabArticle loop");
          var a = this._flagIsActive(this.FLAG_STRIP_UNLIKELYS),
            n = [],
            s = this._doc.documentElement;
          let de = !0;
          for (; s; ) {
            s.tagName === "HTML" && (this._articleLang = s.getAttribute("lang"));
            var o = s.className + " " + s.id;
            if (!this._isProbablyVisible(s)) {
              this.log("Removing hidden node - " + o), (s = this._removeAndGetNext(s));
              continue;
            }
            if (s.getAttribute("aria-modal") == "true" && s.getAttribute("role") == "dialog") {
              s = this._removeAndGetNext(s);
              continue;
            }
            if (this._checkByline(s, o)) {
              s = this._removeAndGetNext(s);
              continue;
            }
            if (de && this._headerDuplicatesTitle(s)) {
              this.log("Removing header: ", s.textContent.trim(), this._articleTitle.trim()),
                (de = !1),
                (s = this._removeAndGetNext(s));
              continue;
            }
            if (a) {
              if (
                this.REGEXPS.unlikelyCandidates.test(o) &&
                !this.REGEXPS.okMaybeItsACandidate.test(o) &&
                !this._hasAncestorTag(s, "table") &&
                !this._hasAncestorTag(s, "code") &&
                s.tagName !== "BODY" &&
                s.tagName !== "A"
              ) {
                this.log("Removing unlikely candidate - " + o), (s = this._removeAndGetNext(s));
                continue;
              }
              if (this.UNLIKELY_ROLES.includes(s.getAttribute("role"))) {
                this.log("Removing content with role " + s.getAttribute("role") + " - " + o),
                  (s = this._removeAndGetNext(s));
                continue;
              }
            }
            if (
              (s.tagName === "DIV" ||
                s.tagName === "SECTION" ||
                s.tagName === "HEADER" ||
                s.tagName === "H1" ||
                s.tagName === "H2" ||
                s.tagName === "H3" ||
                s.tagName === "H4" ||
                s.tagName === "H5" ||
                s.tagName === "H6") &&
              this._isElementWithoutContent(s)
            ) {
              s = this._removeAndGetNext(s);
              continue;
            }
            if ((this.DEFAULT_TAGS_TO_SCORE.indexOf(s.tagName) !== -1 && n.push(s), s.tagName === "DIV")) {
              for (var c = null, l = s.firstChild; l; ) {
                var h = l.nextSibling;
                if (this._isPhrasingContent(l))
                  c !== null
                    ? c.appendChild(l)
                    : this._isWhitespace(l) || ((c = t.createElement("p")), s.replaceChild(c, l), c.appendChild(l));
                else if (c !== null) {
                  for (; c.lastChild && this._isWhitespace(c.lastChild); ) c.removeChild(c.lastChild);
                  c = null;
                }
                l = h;
              }
              if (this._hasSingleTagInsideElement(s, "P") && this._getLinkDensity(s) < 0.25) {
                var m = s.children[0];
                s.parentNode.replaceChild(m, s), (s = m), n.push(s);
              } else this._hasChildBlockElement(s) || ((s = this._setNodeTag(s, "P")), n.push(s));
            }
            s = this._getNextNode(s);
          }
          var T = [];
          this._forEachNode(n, function (E) {
            if (!(!E.parentNode || typeof E.parentNode.tagName > "u")) {
              var b = this._getInnerText(E);
              if (!(b.length < 25)) {
                var ve = this._getNodeAncestors(E, 5);
                if (ve.length !== 0) {
                  var H = 0;
                  (H += 1),
                    (H += b.split(this.REGEXPS.commas).length),
                    (H += Math.min(Math.floor(b.length / 100), 3)),
                    this._forEachNode(ve, function (x, z) {
                      if (!(!x.tagName || !x.parentNode || typeof x.parentNode.tagName > "u")) {
                        if ((typeof x.readability > "u" && (this._initializeNode(x), T.push(x)), z === 0)) var J = 1;
                        else z === 1 ? (J = 2) : (J = z * 3);
                        x.readability.contentScore += H / J;
                      }
                    });
                }
              }
            }
          });
          for (var _ = [], p = 0, S = T.length; p < S; p += 1) {
            var N = T[p],
              L = N.readability.contentScore * (1 - this._getLinkDensity(N));
            (N.readability.contentScore = L), this.log("Candidate:", N, "with score " + L);
            for (var C = 0; C < this._nbTopCandidates; C++) {
              var D = _[C];
              if (!D || L > D.readability.contentScore) {
                _.splice(C, 0, N), _.length > this._nbTopCandidates && _.pop();
                break;
              }
            }
          }
          var u = _[0] || null,
            w = !1,
            f;
          if (u === null || u.tagName === "BODY") {
            for (u = t.createElement("DIV"), w = !0; e.firstChild; )
              this.log("Moving child out:", e.firstChild), u.appendChild(e.firstChild);
            e.appendChild(u), this._initializeNode(u);
          } else if (u) {
            for (var I = [], k = 1; k < _.length; k++)
              _[k].readability.contentScore / u.readability.contentScore >= 0.75 &&
                I.push(this._getNodeAncestors(_[k]));
            var V = 3;
            if (I.length >= V)
              for (f = u.parentNode; f.tagName !== "BODY"; ) {
                for (var $ = 0, X = 0; X < I.length && $ < V; X++) $ += Number(I[X].includes(f));
                if ($ >= V) {
                  u = f;
                  break;
                }
                f = f.parentNode;
              }
            u.readability || this._initializeNode(u), (f = u.parentNode);
            for (var j = u.readability.contentScore, Je = j / 3; f.tagName !== "BODY"; ) {
              if (!f.readability) {
                f = f.parentNode;
                continue;
              }
              var he = f.readability.contentScore;
              if (he < Je) break;
              if (he > j) {
                u = f;
                break;
              }
              (j = f.readability.contentScore), (f = f.parentNode);
            }
            for (f = u.parentNode; f.tagName != "BODY" && f.children.length == 1; ) (u = f), (f = u.parentNode);
            u.readability || this._initializeNode(u);
          }
          var d = t.createElement("DIV");
          r && (d.id = "readability-content");
          var Qe = Math.max(10, u.readability.contentScore * 0.2);
          f = u.parentNode;
          for (var Y = f.children, O = 0, ue = Y.length; O < ue; O++) {
            var g = Y[O],
              P = !1;
            if (
              (this.log("Looking at sibling node:", g, g.readability ? "with score " + g.readability.contentScore : ""),
              this.log("Sibling has score", g.readability ? g.readability.contentScore : "Unknown"),
              g === u)
            )
              P = !0;
            else {
              var fe = 0;
              if (
                (g.className === u.className && u.className !== "" && (fe += u.readability.contentScore * 0.2),
                g.readability && g.readability.contentScore + fe >= Qe)
              )
                P = !0;
              else if (g.nodeName === "P") {
                var ge = this._getLinkDensity(g),
                  me = this._getInnerText(g),
                  q = me.length;
                ((q > 80 && ge < 0.25) || (q < 80 && q > 0 && ge === 0 && me.search(/\.( |$)/) !== -1)) && (P = !0);
              }
            }
            P &&
              (this.log("Appending node:", g),
              this.ALTER_TO_DIV_EXCEPTIONS.indexOf(g.nodeName) === -1 &&
                (this.log("Altering sibling:", g, "to div."), (g = this._setNodeTag(g, "DIV"))),
              d.appendChild(g),
              (Y = f.children),
              (O -= 1),
              (ue -= 1));
          }
          if (
            (this._debug && this.log("Article content pre-prep: " + d.innerHTML),
            this._prepArticle(d),
            this._debug && this.log("Article content post-prep: " + d.innerHTML),
            w)
          )
            (u.id = "readability-page-1"), (u.className = "page");
          else {
            var M = t.createElement("DIV");
            for (M.id = "readability-page-1", M.className = "page"; d.firstChild; ) M.appendChild(d.firstChild);
            d.appendChild(M);
          }
          this._debug && this.log("Article content after paging: " + d.innerHTML);
          var K = !0,
            B = this._getInnerText(d, !0).length;
          if (B < this._charThreshold)
            if (((K = !1), (e.innerHTML = i), this._flagIsActive(this.FLAG_STRIP_UNLIKELYS)))
              this._removeFlag(this.FLAG_STRIP_UNLIKELYS), this._attempts.push({ articleContent: d, textLength: B });
            else if (this._flagIsActive(this.FLAG_WEIGHT_CLASSES))
              this._removeFlag(this.FLAG_WEIGHT_CLASSES), this._attempts.push({ articleContent: d, textLength: B });
            else if (this._flagIsActive(this.FLAG_CLEAN_CONDITIONALLY))
              this._removeFlag(this.FLAG_CLEAN_CONDITIONALLY),
                this._attempts.push({ articleContent: d, textLength: B });
            else {
              if (
                (this._attempts.push({ articleContent: d, textLength: B }),
                this._attempts.sort(function (E, b) {
                  return b.textLength - E.textLength;
                }),
                !this._attempts[0].textLength)
              )
                return null;
              (d = this._attempts[0].articleContent), (K = !0);
            }
          if (K) {
            var Ze = [f, u].concat(this._getNodeAncestors(f));
            return (
              this._someNode(Ze, function (E) {
                if (!E.tagName) return !1;
                var b = E.getAttribute("dir");
                return b ? ((this._articleDir = b), !0) : !1;
              }),
              d
            );
          }
        }
      },
      _isValidByline: function (e) {
        return typeof e == "string" || e instanceof String ? ((e = e.trim()), e.length > 0 && e.length < 100) : !1;
      },
      _unescapeHtmlEntities: function (e) {
        if (!e) return e;
        var t = this.HTML_ESCAPE_MAP;
        return e
          .replace(/&(quot|amp|apos|lt|gt);/g, function (r, i) {
            return t[i];
          })
          .replace(/&#(?:x([0-9a-z]{1,4})|([0-9]{1,4}));/gi, function (r, i, a) {
            var n = parseInt(i || a, i ? 16 : 10);
            return String.fromCharCode(n);
          });
      },
      _getJSONLD: function (e) {
        var t = this._getAllNodesWithTag(e, ["script"]),
          r;
        return (
          this._forEachNode(t, function (i) {
            if (!r && i.getAttribute("type") === "application/ld+json")
              try {
                var a = i.textContent.replace(/^\s*<!\[CDATA\[|\]\]>\s*$/g, ""),
                  n = JSON.parse(a);
                if (
                  !n["@context"] ||
                  !n["@context"].match(/^https?\:\/\/schema\.org$/) ||
                  (!n["@type"] &&
                    Array.isArray(n["@graph"]) &&
                    (n = n["@graph"].find(function (l) {
                      return (l["@type"] || "").match(this.REGEXPS.jsonLdArticleTypes);
                    })),
                  !n || !n["@type"] || !n["@type"].match(this.REGEXPS.jsonLdArticleTypes))
                )
                  return;
                if (((r = {}), typeof n.name == "string" && typeof n.headline == "string" && n.name !== n.headline)) {
                  var s = this._getArticleTitle(),
                    o = this._textSimilarity(n.name, s) > 0.75,
                    c = this._textSimilarity(n.headline, s) > 0.75;
                  c && !o ? (r.title = n.headline) : (r.title = n.name);
                } else
                  typeof n.name == "string"
                    ? (r.title = n.name.trim())
                    : typeof n.headline == "string" && (r.title = n.headline.trim());
                n.author &&
                  (typeof n.author.name == "string"
                    ? (r.byline = n.author.name.trim())
                    : Array.isArray(n.author) &&
                      n.author[0] &&
                      typeof n.author[0].name == "string" &&
                      (r.byline = n.author
                        .filter(function (l) {
                          return l && typeof l.name == "string";
                        })
                        .map(function (l) {
                          return l.name.trim();
                        })
                        .join(", "))),
                  typeof n.description == "string" && (r.excerpt = n.description.trim()),
                  n.publisher && typeof n.publisher.name == "string" && (r.siteName = n.publisher.name.trim()),
                  typeof n.datePublished == "string" && (r.datePublished = n.datePublished.trim());
                return;
              } catch (l) {
                this.log(l.message);
              }
          }),
          r || {}
        );
      },
      _getArticleMetadata: function (e) {
        var t = {},
          r = {},
          i = this._doc.getElementsByTagName("meta"),
          a =
            /\s*(article|dc|dcterm|og|twitter)\s*:\s*(author|creator|description|published_time|title|site_name)\s*/gi,
          n =
            /^\s*(?:(dc|dcterm|og|twitter|weibo:(article|webpage))\s*[\.:]\s*)?(author|creator|description|title|site_name)\s*$/i;
        return (
          this._forEachNode(i, function (s) {
            var o = s.getAttribute("name"),
              c = s.getAttribute("property"),
              l = s.getAttribute("content");
            if (l) {
              var h = null,
                m = null;
              c && ((h = c.match(a)), h && ((m = h[0].toLowerCase().replace(/\s/g, "")), (r[m] = l.trim()))),
                !h &&
                  o &&
                  n.test(o) &&
                  ((m = o), l && ((m = m.toLowerCase().replace(/\s/g, "").replace(/\./g, ":")), (r[m] = l.trim())));
            }
          }),
          (t.title =
            e.title ||
            r["dc:title"] ||
            r["dcterm:title"] ||
            r["og:title"] ||
            r["weibo:article:title"] ||
            r["weibo:webpage:title"] ||
            r.title ||
            r["twitter:title"]),
          t.title || (t.title = this._getArticleTitle()),
          (t.byline = e.byline || r["dc:creator"] || r["dcterm:creator"] || r.author),
          (t.excerpt =
            e.excerpt ||
            r["dc:description"] ||
            r["dcterm:description"] ||
            r["og:description"] ||
            r["weibo:article:description"] ||
            r["weibo:webpage:description"] ||
            r.description ||
            r["twitter:description"]),
          (t.siteName = e.siteName || r["og:site_name"]),
          (t.publishedTime = e.datePublished || r["article:published_time"] || null),
          (t.title = this._unescapeHtmlEntities(t.title)),
          (t.byline = this._unescapeHtmlEntities(t.byline)),
          (t.excerpt = this._unescapeHtmlEntities(t.excerpt)),
          (t.siteName = this._unescapeHtmlEntities(t.siteName)),
          (t.publishedTime = this._unescapeHtmlEntities(t.publishedTime)),
          t
        );
      },
      _isSingleImage: function (e) {
        return e.tagName === "IMG"
          ? !0
          : e.children.length !== 1 || e.textContent.trim() !== ""
            ? !1
            : this._isSingleImage(e.children[0]);
      },
      _unwrapNoscriptImages: function (e) {
        var t = Array.from(e.getElementsByTagName("img"));
        this._forEachNode(t, function (i) {
          for (var a = 0; a < i.attributes.length; a++) {
            var n = i.attributes[a];
            switch (n.name) {
              case "src":
              case "srcset":
              case "data-src":
              case "data-srcset":
                return;
            }
            if (/\.(jpg|jpeg|png|webp)/i.test(n.value)) return;
          }
          i.parentNode.removeChild(i);
        });
        var r = Array.from(e.getElementsByTagName("noscript"));
        this._forEachNode(r, function (i) {
          var a = e.createElement("div");
          if (((a.innerHTML = i.innerHTML), !!this._isSingleImage(a))) {
            var n = i.previousElementSibling;
            if (n && this._isSingleImage(n)) {
              var s = n;
              s.tagName !== "IMG" && (s = n.getElementsByTagName("img")[0]);
              for (var o = a.getElementsByTagName("img")[0], c = 0; c < s.attributes.length; c++) {
                var l = s.attributes[c];
                if (
                  l.value !== "" &&
                  (l.name === "src" || l.name === "srcset" || /\.(jpg|jpeg|png|webp)/i.test(l.value))
                ) {
                  if (o.getAttribute(l.name) === l.value) continue;
                  var h = l.name;
                  o.hasAttribute(h) && (h = "data-old-" + h), o.setAttribute(h, l.value);
                }
              }
              i.parentNode.replaceChild(a.firstElementChild, n);
            }
          }
        });
      },
      _removeScripts: function (e) {
        this._removeNodes(this._getAllNodesWithTag(e, ["script", "noscript"]));
      },
      _hasSingleTagInsideElement: function (e, t) {
        return e.children.length != 1 || e.children[0].tagName !== t
          ? !1
          : !this._someNode(e.childNodes, function (r) {
              return r.nodeType === this.TEXT_NODE && this.REGEXPS.hasContent.test(r.textContent);
            });
      },
      _isElementWithoutContent: function (e) {
        return (
          e.nodeType === this.ELEMENT_NODE &&
          e.textContent.trim().length == 0 &&
          (e.children.length == 0 ||
            e.children.length == e.getElementsByTagName("br").length + e.getElementsByTagName("hr").length)
        );
      },
      _hasChildBlockElement: function (e) {
        return this._someNode(e.childNodes, function (t) {
          return this.DIV_TO_P_ELEMS.has(t.tagName) || this._hasChildBlockElement(t);
        });
      },
      _isPhrasingContent: function (e) {
        return (
          e.nodeType === this.TEXT_NODE ||
          this.PHRASING_ELEMS.indexOf(e.tagName) !== -1 ||
          ((e.tagName === "A" || e.tagName === "DEL" || e.tagName === "INS") &&
            this._everyNode(e.childNodes, this._isPhrasingContent))
        );
      },
      _isWhitespace: function (e) {
        return (
          (e.nodeType === this.TEXT_NODE && e.textContent.trim().length === 0) ||
          (e.nodeType === this.ELEMENT_NODE && e.tagName === "BR")
        );
      },
      _getInnerText: function (e, t) {
        t = typeof t > "u" ? !0 : t;
        var r = e.textContent.trim();
        return t ? r.replace(this.REGEXPS.normalize, " ") : r;
      },
      _getCharCount: function (e, t) {
        return (t = t || ","), this._getInnerText(e).split(t).length - 1;
      },
      _cleanStyles: function (e) {
        if (!(!e || e.tagName.toLowerCase() === "svg")) {
          for (var t = 0; t < this.PRESENTATIONAL_ATTRIBUTES.length; t++)
            e.removeAttribute(this.PRESENTATIONAL_ATTRIBUTES[t]);
          this.DEPRECATED_SIZE_ATTRIBUTE_ELEMS.indexOf(e.tagName) !== -1 &&
            (e.removeAttribute("width"), e.removeAttribute("height"));
          for (var r = e.firstElementChild; r !== null; ) this._cleanStyles(r), (r = r.nextElementSibling);
        }
      },
      _getLinkDensity: function (e) {
        var t = this._getInnerText(e).length;
        if (t === 0) return 0;
        var r = 0;
        return (
          this._forEachNode(e.getElementsByTagName("a"), function (i) {
            var a = i.getAttribute("href"),
              n = a && this.REGEXPS.hashUrl.test(a) ? 0.3 : 1;
            r += this._getInnerText(i).length * n;
          }),
          r / t
        );
      },
      _getClassWeight: function (e) {
        if (!this._flagIsActive(this.FLAG_WEIGHT_CLASSES)) return 0;
        var t = 0;
        return (
          typeof e.className == "string" &&
            e.className !== "" &&
            (this.REGEXPS.negative.test(e.className) && (t -= 25),
            this.REGEXPS.positive.test(e.className) && (t += 25)),
          typeof e.id == "string" &&
            e.id !== "" &&
            (this.REGEXPS.negative.test(e.id) && (t -= 25), this.REGEXPS.positive.test(e.id) && (t += 25)),
          t
        );
      },
      _clean: function (e, t) {
        var r = ["object", "embed", "iframe"].indexOf(t) !== -1;
        this._removeNodes(this._getAllNodesWithTag(e, [t]), function (i) {
          if (r) {
            for (var a = 0; a < i.attributes.length; a++)
              if (this._allowedVideoRegex.test(i.attributes[a].value)) return !1;
            if (i.tagName === "object" && this._allowedVideoRegex.test(i.innerHTML)) return !1;
          }
          return !0;
        });
      },
      _hasAncestorTag: function (e, t, r, i) {
        (r = r || 3), (t = t.toUpperCase());
        for (var a = 0; e.parentNode; ) {
          if (r > 0 && a > r) return !1;
          if (e.parentNode.tagName === t && (!i || i(e.parentNode))) return !0;
          (e = e.parentNode), a++;
        }
        return !1;
      },
      _getRowAndColumnCount: function (e) {
        for (var t = 0, r = 0, i = e.getElementsByTagName("tr"), a = 0; a < i.length; a++) {
          var n = i[a].getAttribute("rowspan") || 0;
          n && (n = parseInt(n, 10)), (t += n || 1);
          for (var s = 0, o = i[a].getElementsByTagName("td"), c = 0; c < o.length; c++) {
            var l = o[c].getAttribute("colspan") || 0;
            l && (l = parseInt(l, 10)), (s += l || 1);
          }
          r = Math.max(r, s);
        }
        return { rows: t, columns: r };
      },
      _markDataTables: function (e) {
        for (var t = e.getElementsByTagName("table"), r = 0; r < t.length; r++) {
          var i = t[r],
            a = i.getAttribute("role");
          if (a == "presentation") {
            i._readabilityDataTable = !1;
            continue;
          }
          var n = i.getAttribute("datatable");
          if (n == "0") {
            i._readabilityDataTable = !1;
            continue;
          }
          var s = i.getAttribute("summary");
          if (s) {
            i._readabilityDataTable = !0;
            continue;
          }
          var o = i.getElementsByTagName("caption")[0];
          if (o && o.childNodes.length > 0) {
            i._readabilityDataTable = !0;
            continue;
          }
          var c = ["col", "colgroup", "tfoot", "thead", "th"],
            l = function (m) {
              return !!i.getElementsByTagName(m)[0];
            };
          if (c.some(l)) {
            this.log("Data table because found data-y descendant"), (i._readabilityDataTable = !0);
            continue;
          }
          if (i.getElementsByTagName("table")[0]) {
            i._readabilityDataTable = !1;
            continue;
          }
          var h = this._getRowAndColumnCount(i);
          if (h.rows >= 10 || h.columns > 4) {
            i._readabilityDataTable = !0;
            continue;
          }
          i._readabilityDataTable = h.rows * h.columns > 10;
        }
      },
      _fixLazyImages: function (e) {
        this._forEachNode(this._getAllNodesWithTag(e, ["img", "picture", "figure"]), function (t) {
          if (t.src && this.REGEXPS.b64DataUrl.test(t.src)) {
            var r = this.REGEXPS.b64DataUrl.exec(t.src);
            if (r[1] === "image/svg+xml") return;
            for (var i = !1, a = 0; a < t.attributes.length; a++) {
              var n = t.attributes[a];
              if (n.name !== "src" && /\.(jpg|jpeg|png|webp)/i.test(n.value)) {
                i = !0;
                break;
              }
            }
            if (i) {
              var s = t.src.search(/base64\s*/i) + 7,
                o = t.src.length - s;
              o < 133 && t.removeAttribute("src");
            }
          }
          if (!((t.src || (t.srcset && t.srcset != "null")) && t.className.toLowerCase().indexOf("lazy") === -1)) {
            for (var c = 0; c < t.attributes.length; c++)
              if (((n = t.attributes[c]), !(n.name === "src" || n.name === "srcset" || n.name === "alt"))) {
                var l = null;
                if (
                  (/\.(jpg|jpeg|png|webp)\s+\d/.test(n.value)
                    ? (l = "srcset")
                    : /^\s*\S+\.(jpg|jpeg|png|webp)\S*\s*$/.test(n.value) && (l = "src"),
                  l)
                ) {
                  if (t.tagName === "IMG" || t.tagName === "PICTURE") t.setAttribute(l, n.value);
                  else if (t.tagName === "FIGURE" && !this._getAllNodesWithTag(t, ["img", "picture"]).length) {
                    var h = this._doc.createElement("img");
                    h.setAttribute(l, n.value), t.appendChild(h);
                  }
                }
              }
          }
        });
      },
      _getTextDensity: function (e, t) {
        var r = this._getInnerText(e, !0).length;
        if (r === 0) return 0;
        var i = 0,
          a = this._getAllNodesWithTag(e, t);
        return this._forEachNode(a, (n) => (i += this._getInnerText(n, !0).length)), i / r;
      },
      _cleanConditionally: function (e, t) {
        this._flagIsActive(this.FLAG_CLEAN_CONDITIONALLY) &&
          this._removeNodes(this._getAllNodesWithTag(e, [t]), function (r) {
            var i = function (f) {
                return f._readabilityDataTable;
              },
              a = t === "ul" || t === "ol";
            if (!a) {
              var n = 0,
                s = this._getAllNodesWithTag(r, ["ul", "ol"]);
              this._forEachNode(s, (f) => (n += this._getInnerText(f).length)),
                (a = n / this._getInnerText(r).length > 0.9);
            }
            if ((t === "table" && i(r)) || this._hasAncestorTag(r, "table", -1, i) || this._hasAncestorTag(r, "code"))
              return !1;
            var o = this._getClassWeight(r);
            this.log("Cleaning Conditionally", r);
            var c = 0;
            if (o + c < 0) return !0;
            if (this._getCharCount(r, ",") < 10) {
              for (
                var l = r.getElementsByTagName("p").length,
                  h = r.getElementsByTagName("img").length,
                  m = r.getElementsByTagName("li").length - 100,
                  T = r.getElementsByTagName("input").length,
                  _ = this._getTextDensity(r, ["h1", "h2", "h3", "h4", "h5", "h6"]),
                  p = 0,
                  S = this._getAllNodesWithTag(r, ["object", "embed", "iframe"]),
                  N = 0;
                N < S.length;
                N++
              ) {
                for (var L = 0; L < S[N].attributes.length; L++)
                  if (this._allowedVideoRegex.test(S[N].attributes[L].value)) return !1;
                if (S[N].tagName === "object" && this._allowedVideoRegex.test(S[N].innerHTML)) return !1;
                p++;
              }
              var C = this._getLinkDensity(r),
                D = this._getInnerText(r).length,
                u =
                  (h > 1 && l / h < 0.5 && !this._hasAncestorTag(r, "figure")) ||
                  (!a && m > l) ||
                  T > Math.floor(l / 3) ||
                  (!a && _ < 0.9 && D < 25 && (h === 0 || h > 2) && !this._hasAncestorTag(r, "figure")) ||
                  (!a && o < 25 && C > 0.2) ||
                  (o >= 25 && C > 0.5) ||
                  (p === 1 && D < 75) ||
                  p > 1;
              if (a && u) {
                for (var w = 0; w < r.children.length; w++) if (r.children[w].children.length > 1) return u;
                let f = r.getElementsByTagName("li").length;
                if (h == f) return !1;
              }
              return u;
            }
            return !1;
          });
      },
      _cleanMatchedNodes: function (e, t) {
        for (var r = this._getNextNode(e, !0), i = this._getNextNode(e); i && i != r; )
          t.call(this, i, i.className + " " + i.id) ? (i = this._removeAndGetNext(i)) : (i = this._getNextNode(i));
      },
      _cleanHeaders: function (e) {
        let t = this._getAllNodesWithTag(e, ["h1", "h2"]);
        this._removeNodes(t, function (r) {
          let i = this._getClassWeight(r) < 0;
          return i && this.log("Removing header with low class weight:", r), i;
        });
      },
      _headerDuplicatesTitle: function (e) {
        if (e.tagName != "H1" && e.tagName != "H2") return !1;
        var t = this._getInnerText(e, !1);
        return (
          this.log("Evaluating similarity of header:", t, this._articleTitle),
          this._textSimilarity(this._articleTitle, t) > 0.75
        );
      },
      _flagIsActive: function (e) {
        return (this._flags & e) > 0;
      },
      _removeFlag: function (e) {
        this._flags = this._flags & ~e;
      },
      _isProbablyVisible: function (e) {
        return (
          (!e.style || e.style.display != "none") &&
          (!e.style || e.style.visibility != "hidden") &&
          !e.hasAttribute("hidden") &&
          (!e.hasAttribute("aria-hidden") ||
            e.getAttribute("aria-hidden") != "true" ||
            (e.className && e.className.indexOf && e.className.indexOf("fallback-image") !== -1))
        );
      },
      parse: function () {
        if (this._maxElemsToParse > 0) {
          var e = this._doc.getElementsByTagName("*").length;
          if (e > this._maxElemsToParse) throw new Error("Aborting parsing document; " + e + " elements found");
        }
        this._unwrapNoscriptImages(this._doc);
        var t = this._disableJSONLD ? {} : this._getJSONLD(this._doc);
        this._removeScripts(this._doc), this._prepDocument();
        var r = this._getArticleMetadata(t);
        this._articleTitle = r.title;
        var i = this._grabArticle();
        if (!i) return null;
        if ((this.log("Grabbed: " + i.innerHTML), this._postProcessContent(i), !r.excerpt)) {
          var a = i.getElementsByTagName("p");
          a.length > 0 && (r.excerpt = a[0].textContent.trim());
        }
        var n = i.textContent;
        return {
          title: this._articleTitle,
          byline: r.byline || this._articleByline,
          dir: this._articleDir,
          lang: this._articleLang,
          content: this._serializer(i),
          textContent: n,
          length: n.length,
          excerpt: r.excerpt,
          siteName: r.siteName || this._articleSiteName,
          publishedTime: r.publishedTime,
        };
      },
    };
    typeof Q == "object" && (Q.exports = pe);
  });
  var ye = U((Kt, Z) => {
    var be = {
      unlikelyCandidates:
        /-ad-|ai2html|banner|breadcrumbs|combx|comment|community|cover-wrap|disqus|extra|footer|gdpr|header|legends|menu|related|remark|replies|rss|shoutbox|sidebar|skyscraper|social|sponsor|supplemental|ad-break|agegate|pagination|pager|popup|yom-remote/i,
      okMaybeItsACandidate: /and|article|body|column|content|main|shadow/i,
    };
    function lt(e) {
      return (
        (!e.style || e.style.display != "none") &&
        !e.hasAttribute("hidden") &&
        (!e.hasAttribute("aria-hidden") ||
          e.getAttribute("aria-hidden") != "true" ||
          (e.className && e.className.indexOf && e.className.indexOf("fallback-image") !== -1))
      );
    }
    function ot(e, t = {}) {
      typeof t == "function" && (t = { visibilityChecker: t });
      var r = { minScore: 20, minContentLength: 140, visibilityChecker: lt };
      t = Object.assign(r, t);
      var i = e.querySelectorAll("p, pre, article"),
        a = e.querySelectorAll("div > br");
      if (a.length) {
        var n = new Set(i);
        [].forEach.call(a, function (o) {
          n.add(o.parentNode);
        }),
          (i = Array.from(n));
      }
      var s = 0;
      return [].some.call(i, function (o) {
        if (!t.visibilityChecker(o)) return !1;
        var c = o.className + " " + o.id;
        if ((be.unlikelyCandidates.test(c) && !be.okMaybeItsACandidate.test(c)) || o.matches("li p")) return !1;
        var l = o.textContent.trim().length;
        return l < t.minContentLength ? !1 : ((s += Math.sqrt(l - t.minContentLength)), s > t.minScore);
      });
    }
    typeof Z == "object" && (Z.exports = ot);
  });
  var Te = U((zt, Ae) => {
    var ct = Ee(),
      ht = ye();
    Ae.exports = { Readability: ct, isProbablyReaderable: ht };
  });
  var qe = U((R) => {
    "use strict";
    Object.defineProperty(R, "__esModule", { value: !0 });
    var ke = /highlight-(?:text|source)-([a-z0-9]+)/;
    function Me(e) {
      e.addRule("highlightedCodeBlock", {
        filter: function (t) {
          var r = t.firstChild;
          return t.nodeName === "DIV" && ke.test(t.className) && r && r.nodeName === "PRE";
        },
        replacement: function (t, r, i) {
          var a = r.className || "",
            n = (a.match(ke) || [null, ""])[1];
          return (
            `

` +
            i.fence +
            n +
            `
` +
            r.firstChild.textContent +
            `
` +
            i.fence +
            `

`
          );
        },
      });
    }
    function He(e) {
      e.addRule("strikethrough", {
        filter: ["del", "s", "strike"],
        replacement: function (t) {
          return "~~" + t + "~~";
        },
      });
    }
    var Ot = Array.prototype.indexOf,
      Mt = Array.prototype.every,
      y = {},
      Ht = { left: ":---", right: "---:", center: ":---:" },
      le = null,
      Oe = new WeakMap();
    function Gt(e) {
      return e ? (e.getAttribute("align") || e.style.textAlign || "").toLowerCase() : "";
    }
    function Ge(e) {
      return e ? Ht[e] : "---";
    }
    function Ue(e, t) {
      for (var r = { left: 0, right: 0, center: 0, "": 0 }, i = "", a = 0; a < e.rows.length; ++a) {
        var n = e.rows[a];
        if (t < n.childNodes.length) {
          var s = Gt(n.childNodes[t]);
          ++r[s], r[s] > r[i] && (i = s);
        }
      }
      return i;
    }
    y.tableCell = {
      filter: ["th", "td"],
      replacement: function (e, t) {
        return ce($e(t)) ? e : Fe(e, t);
      },
    };
    y.tableRow = {
      filter: "tr",
      replacement: function (e, t) {
        let r = $e(t);
        if (ce(r)) return e;
        var i = "";
        if (Ut(t)) {
          let s = Xe(r);
          for (var a = 0; a < s; a++) {
            let o = a < t.childNodes.length ? t.childNodes[a] : null;
            var n = Ge(Ue(r, a));
            i += Fe(n, o, a);
          }
        }
        return (
          `
` +
          e +
          (i
            ? `
` + i
            : "")
        );
      },
    };
    y.table = {
      filter: function (e, t) {
        return e.nodeName === "TABLE" && !Ve(e, t);
      },
      replacement: function (e, t) {
        if (ce(t)) return e;
        e = e.replace(
          /\n+/g,
          `
`,
        );
        var r = e.trim().split(`
`);
        r.length >= 2 && (r = r[1]);
        var i = /\| :?---/.test(r),
          a = Xe(t),
          n = "";
        if (a && !i) {
          n =
            "|" +
            "     |".repeat(a) +
            `
|`;
          for (var s = 0; s < a; ++s) n += " " + Ge(Ue(t, s)) + " |";
        }
        let o = (t.caption && t.caption.textContent) || "",
          c = o
            ? `${o}

`
            : "",
          l = `${n}${e}`.trimStart();
        return `

${c}${l}

`;
      },
    };
    y.tableCaption = { filter: ["caption"], replacement: () => "" };
    y.tableColgroup = { filter: ["colgroup", "col"], replacement: () => "" };
    y.tableSection = {
      filter: ["thead", "tbody", "tfoot"],
      replacement: function (e) {
        return e;
      },
    };
    function Ut(e) {
      var t = e.parentNode;
      return (
        t.nodeName === "THEAD" ||
        (t.firstChild === e &&
          (t.nodeName === "TABLE" || Ft(t)) &&
          Mt.call(e.childNodes, function (r) {
            return r.nodeName === "TH";
          }))
      );
    }
    function Ft(e) {
      var t = e.previousSibling;
      return e.nodeName === "TBODY" && (!t || (t.nodeName === "THEAD" && /^\s*$/i.test(t.textContent)));
    }
    function Fe(e, t = null, r = null) {
      r === null && (r = Ot.call(t.parentNode.childNodes, t));
      var i = " ";
      r === 0 && (i = "| ");
      let a = e.trim().replace(/\n\r/g, "<br>").replace(/\n/g, "<br>");
      for (a = a.replace(/\|+/g, "\\|"); a.length < 3; ) a += " ";
      return t && (a = Vt(a, t, " ")), i + a + " |";
    }
    function We(e) {
      if (!e.childNodes) return !1;
      for (let t = 0; t < e.childNodes.length; t++) {
        let r = e.childNodes[t];
        if (r.nodeName === "TABLE" || We(r)) return !0;
      }
      return !1;
    }
    var oe = (e, t) => {
        if (!e.childNodes) return !1;
        for (let r = 0; r < e.childNodes.length; r++) {
          let i = e.childNodes[r];
          if ((t === "code" && le && le(i)) || t.includes(i.nodeName) || oe(i, t)) return !0;
        }
        return !1;
      },
      Ve = (e, t) => {
        let r = ["UL", "OL", "H1", "H2", "H3", "H4", "H5", "H6", "HR", "BLOCKQUOTE"];
        return t.preserveNestedTables && r.push("TABLE"), oe(e, "code") || oe(e, r);
      };
    function ce(e) {
      let t = Oe.get(e);
      if (t !== void 0) return t;
      let r = Wt(e);
      return Oe.set(e, r), r;
    }
    function Wt(e) {
      return !!(!e || !e.rows || (e.rows.length === 1 && e.rows[0].childNodes.length <= 1) || We(e));
    }
    function $e(e) {
      let t = e.parentNode;
      for (; t.nodeName !== "TABLE"; ) if (((t = t.parentNode), !t)) return null;
      return t;
    }
    function Vt(e, t, r) {
      let i = t.getAttribute("colspan") || 1;
      for (let a = 1; a < i; a++) e += " | " + r.repeat(3);
      return e;
    }
    function Xe(e) {
      let t = 0;
      for (let r = 0; r < e.rows.length; r++) {
        let a = e.rows[r].childNodes.length;
        a > t && (t = a);
      }
      return t;
    }
    function je(e) {
      (le = e.isCodeBlock),
        e.keep(function (r) {
          return !!(r.nodeName === "TABLE" && Ve(r, e.options));
        });
      for (var t in y) e.addRule(t, y[t]);
    }
    function Ye(e) {
      e.addRule("taskListItems", {
        filter: function (t) {
          return t.type === "checkbox" && t.parentNode.nodeName === "LI";
        },
        replacement: function (t, r) {
          return (r.checked ? "[x]" : "[ ]") + " ";
        },
      });
    }
    function $t(e) {
      e.use([Me, He, je, Ye]);
    }
    R.gfm = $t;
    R.highlightedCodeBlock = Me;
    R.strikethrough = He;
    R.tables = je;
    R.taskListItems = Ye;
  });
  var jt = {};
  at(jt, { convert: () => Xt });
  var ze = Ne(Te(), 1);
  function ut(e) {
    for (var t = 1; t < arguments.length; t++) {
      var r = arguments[t];
      for (var i in r) r.hasOwnProperty(i) && (e[i] = r[i]);
    }
    return e;
  }
  function ie(e, t) {
    return Array(t + 1).join(e);
  }
  function ft(e) {
    return e.replace(/^\n*/, "");
  }
  function gt(e) {
    for (
      var t = e.length;
      t > 0 &&
      e[t - 1] ===
        `
`;

    )
      t--;
    return e.substring(0, t);
  }
  var mt = [
    "ADDRESS",
    "ARTICLE",
    "ASIDE",
    "AUDIO",
    "BLOCKQUOTE",
    "BODY",
    "CANVAS",
    "CENTER",
    "DD",
    "DIR",
    "DIV",
    "DL",
    "DT",
    "FIELDSET",
    "FIGCAPTION",
    "FIGURE",
    "FOOTER",
    "FORM",
    "FRAMESET",
    "H1",
    "H2",
    "H3",
    "H4",
    "H5",
    "H6",
    "HEADER",
    "HGROUP",
    "HR",
    "HTML",
    "ISINDEX",
    "LI",
    "MAIN",
    "MENU",
    "NAV",
    "NOFRAMES",
    "NOSCRIPT",
    "OL",
    "OUTPUT",
    "P",
    "PRE",
    "SECTION",
    "TABLE",
    "TBODY",
    "TD",
    "TFOOT",
    "TH",
    "THEAD",
    "TR",
    "UL",
  ];
  function ne(e) {
    return ae(e, mt);
  }
  var Ce = [
    "AREA",
    "BASE",
    "BR",
    "COL",
    "COMMAND",
    "EMBED",
    "HR",
    "IMG",
    "INPUT",
    "KEYGEN",
    "LINK",
    "META",
    "PARAM",
    "SOURCE",
    "TRACK",
    "WBR",
  ];
  function xe(e) {
    return ae(e, Ce);
  }
  function dt(e) {
    return we(e, Ce);
  }
  var Re = ["A", "TABLE", "THEAD", "TBODY", "TFOOT", "TH", "TD", "IFRAME", "SCRIPT", "AUDIO", "VIDEO"];
  function vt(e) {
    return ae(e, Re);
  }
  function _t(e) {
    return we(e, Re);
  }
  function ae(e, t) {
    return t.indexOf(e.nodeName) >= 0;
  }
  function we(e, t) {
    return (
      e.getElementsByTagName &&
      t.some(function (r) {
        return e.getElementsByTagName(r).length;
      })
    );
  }
  var v = {};
  v.paragraph = {
    filter: "p",
    replacement: function (e) {
      return (
        `

` +
        e +
        `

`
      );
    },
  };
  v.lineBreak = {
    filter: "br",
    replacement: function (e, t, r) {
      return (
        r.br +
        `
`
      );
    },
  };
  v.heading = {
    filter: ["h1", "h2", "h3", "h4", "h5", "h6"],
    replacement: function (e, t, r) {
      var i = Number(t.nodeName.charAt(1));
      if (r.headingStyle === "setext" && i < 3) {
        var a = ie(i === 1 ? "=" : "-", e.length);
        return (
          `

` +
          e +
          `
` +
          a +
          `

`
        );
      } else
        return (
          `

` +
          ie("#", i) +
          " " +
          e +
          `

`
        );
    },
  };
  v.blockquote = {
    filter: "blockquote",
    replacement: function (e) {
      return (
        (e = e.replace(/^\n+|\n+$/g, "")),
        (e = e.replace(/^/gm, "> ")),
        `

` +
          e +
          `

`
      );
    },
  };
  v.list = {
    filter: ["ul", "ol"],
    replacement: function (e, t) {
      var r = t.parentNode;
      return r.nodeName === "LI" && r.lastElementChild === t
        ? `
` + e
        : `

` +
            e +
            `

`;
    },
  };
  v.listItem = {
    filter: "li",
    replacement: function (e, t, r) {
      e = e
        .replace(/^\n+/, "")
        .replace(
          /\n+$/,
          `
`,
        )
        .replace(
          /\n/gm,
          `
    `,
        );
      var i = r.bulletListMarker + "   ",
        a = t.parentNode;
      if (a.nodeName === "OL") {
        var n = a.getAttribute("start"),
          s = Array.prototype.indexOf.call(a.children, t);
        i = (n ? Number(n) + s : s + 1) + ".  ";
      }
      return (
        i +
        e +
        (t.nextSibling && !/\n$/.test(e)
          ? `
`
          : "")
      );
    },
  };
  v.indentedCodeBlock = {
    filter: function (e, t) {
      return (
        t.codeBlockStyle === "indented" && e.nodeName === "PRE" && e.firstChild && e.firstChild.nodeName === "CODE"
      );
    },
    replacement: function (e, t, r) {
      return (
        `

    ` +
        t.firstChild.textContent.replace(
          /\n/g,
          `
    `,
        ) +
        `

`
      );
    },
  };
  v.fencedCodeBlock = {
    filter: function (e, t) {
      return t.codeBlockStyle === "fenced" && e.nodeName === "PRE" && e.firstChild && e.firstChild.nodeName === "CODE";
    },
    replacement: function (e, t, r) {
      for (
        var i = t.firstChild.getAttribute("class") || "",
          a = (i.match(/language-(\S+)/) || [null, ""])[1],
          n = t.firstChild.textContent,
          s = r.fence.charAt(0),
          o = 3,
          c = new RegExp("^" + s + "{3,}", "gm"),
          l;
        (l = c.exec(n));

      )
        l[0].length >= o && (o = l[0].length + 1);
      var h = ie(s, o);
      return (
        `

` +
        h +
        a +
        `
` +
        n.replace(/\n$/, "") +
        `
` +
        h +
        `

`
      );
    },
  };
  v.horizontalRule = {
    filter: "hr",
    replacement: function (e, t, r) {
      return (
        `

` +
        r.hr +
        `

`
      );
    },
  };
  v.inlineLink = {
    filter: function (e, t) {
      return t.linkStyle === "inlined" && e.nodeName === "A" && e.getAttribute("href");
    },
    replacement: function (e, t) {
      var r = t.getAttribute("href");
      r && (r = r.replace(/([()])/g, "\\$1"));
      var i = F(t.getAttribute("title"));
      return i && (i = ' "' + i.replace(/"/g, '\\"') + '"'), "[" + e + "](" + r + i + ")";
    },
  };
  v.referenceLink = {
    filter: function (e, t) {
      return t.linkStyle === "referenced" && e.nodeName === "A" && e.getAttribute("href");
    },
    replacement: function (e, t, r) {
      var i = t.getAttribute("href"),
        a = F(t.getAttribute("title"));
      a && (a = ' "' + a + '"');
      var n, s;
      switch (r.linkReferenceStyle) {
        case "collapsed":
          (n = "[" + e + "][]"), (s = "[" + e + "]: " + i + a);
          break;
        case "shortcut":
          (n = "[" + e + "]"), (s = "[" + e + "]: " + i + a);
          break;
        default:
          var o = this.references.length + 1;
          (n = "[" + e + "][" + o + "]"), (s = "[" + o + "]: " + i + a);
      }
      return this.references.push(s), n;
    },
    references: [],
    append: function (e) {
      var t = "";
      return (
        this.references.length &&
          ((t =
            `

` +
            this.references.join(`
`) +
            `

`),
          (this.references = [])),
        t
      );
    },
  };
  v.emphasis = {
    filter: ["em", "i"],
    replacement: function (e, t, r) {
      return e.trim() ? r.emDelimiter + e + r.emDelimiter : "";
    },
  };
  v.strong = {
    filter: ["strong", "b"],
    replacement: function (e, t, r) {
      return e.trim() ? r.strongDelimiter + e + r.strongDelimiter : "";
    },
  };
  v.code = {
    filter: function (e) {
      var t = e.previousSibling || e.nextSibling,
        r = e.parentNode.nodeName === "PRE" && !t;
      return e.nodeName === "CODE" && !r;
    },
    replacement: function (e) {
      if (!e) return "";
      e = e.replace(/\r?\n|\r/g, " ");
      for (var t = /^`|^ .*?[^ ].* $|`$/.test(e) ? " " : "", r = "`", i = e.match(/`+/gm) || []; i.indexOf(r) !== -1; )
        r = r + "`";
      return r + t + e + t + r;
    },
  };
  v.image = {
    filter: "img",
    replacement: function (e, t) {
      var r = F(t.getAttribute("alt")),
        i = t.getAttribute("src") || "",
        a = F(t.getAttribute("title")),
        n = a ? ' "' + a + '"' : "";
      return i ? "![" + r + "](" + i + n + ")" : "";
    },
  };
  function F(e) {
    return e
      ? e.replace(
          /(\n+\s*)+/g,
          `
`,
        )
      : "";
  }
  function De(e) {
    (this.options = e),
      (this._keep = []),
      (this._remove = []),
      (this.blankRule = { replacement: e.blankReplacement }),
      (this.keepReplacement = e.keepReplacement),
      (this.defaultRule = { replacement: e.defaultReplacement }),
      (this.array = []);
    for (var t in e.rules) this.array.push(e.rules[t]);
  }
  De.prototype = {
    add: function (e, t) {
      this.array.unshift(t);
    },
    keep: function (e) {
      this._keep.unshift({ filter: e, replacement: this.keepReplacement });
    },
    remove: function (e) {
      this._remove.unshift({
        filter: e,
        replacement: function () {
          return "";
        },
      });
    },
    forNode: function (e) {
      if (e.isBlank) return this.blankRule;
      var t;
      return (t = ee(this.array, e, this.options)) ||
        (t = ee(this._keep, e, this.options)) ||
        (t = ee(this._remove, e, this.options))
        ? t
        : this.defaultRule;
    },
    forEach: function (e) {
      for (var t = 0; t < this.array.length; t++) e(this.array[t], t);
    },
  };
  function ee(e, t, r) {
    for (var i = 0; i < e.length; i++) {
      var a = e[i];
      if (Nt(a, t, r)) return a;
    }
  }
  function Nt(e, t, r) {
    var i = e.filter;
    if (typeof i == "string") {
      if (i === t.nodeName.toLowerCase()) return !0;
    } else if (Array.isArray(i)) {
      if (i.indexOf(t.nodeName.toLowerCase()) > -1) return !0;
    } else if (typeof i == "function") {
      if (i.call(e, t, r)) return !0;
    } else throw new TypeError("`filter` needs to be a string, array, or function");
  }
  function pt(e) {
    var t = e.element,
      r = e.isBlock,
      i = e.isVoid,
      a =
        e.isPre ||
        function (m) {
          return m.nodeName === "PRE";
        };
    if (!(!t.firstChild || a(t))) {
      for (var n = null, s = !1, o = null, c = Se(o, t, a); c !== t; ) {
        if (c.nodeType === 3 || c.nodeType === 4) {
          var l = c.data.replace(/[ \r\n\t]+/g, " ");
          if (((!n || / $/.test(n.data)) && !s && l[0] === " " && (l = l.substr(1)), !l)) {
            c = te(c);
            continue;
          }
          (c.data = l), (n = c);
        } else if (c.nodeType === 1)
          r(c) || c.nodeName === "BR"
            ? (n && (n.data = n.data.replace(/ $/, "")), (n = null), (s = !1))
            : i(c) || a(c)
              ? ((n = null), (s = !0))
              : n && (s = !1);
        else {
          c = te(c);
          continue;
        }
        var h = Se(o, c, a);
        (o = c), (c = h);
      }
      n && ((n.data = n.data.replace(/ $/, "")), n.data || te(n));
    }
  }
  function te(e) {
    var t = e.nextSibling || e.parentNode;
    return e.parentNode.removeChild(e), t;
  }
  function Se(e, t, r) {
    return (e && e.parentNode === t) || r(t)
      ? t.nextSibling || t.parentNode
      : t.firstChild || t.nextSibling || t.parentNode;
  }
  var se = typeof window < "u" ? window : {};
  function Et() {
    var e = se.DOMParser,
      t = !1;
    try {
      new e().parseFromString("", "text/html") && (t = !0);
    } catch {}
    return t;
  }
  function bt() {
    var e = function () {};
    return (
      yt()
        ? (e.prototype.parseFromString = function (t) {
            var r = new window.ActiveXObject("htmlfile");
            return (r.designMode = "on"), r.open(), r.write(t), r.close(), r;
          })
        : (e.prototype.parseFromString = function (t) {
            var r = document.implementation.createHTMLDocument("");
            return r.open(), r.write(t), r.close(), r;
          }),
      e
    );
  }
  function yt() {
    var e = !1;
    try {
      document.implementation.createHTMLDocument("").open();
    } catch {
      se.ActiveXObject && (e = !0);
    }
    return e;
  }
  var At = Et() ? se.DOMParser : bt();
  function Tt(e, t) {
    var r;
    if (typeof e == "string") {
      var i = St().parseFromString('<x-turndown id="turndown-root">' + e + "</x-turndown>", "text/html");
      r = i.getElementById("turndown-root");
    } else r = e.cloneNode(!0);
    return pt({ element: r, isBlock: ne, isVoid: xe, isPre: t.preformattedCode ? Lt : null }), r;
  }
  var re;
  function St() {
    return (re = re || new At()), re;
  }
  function Lt(e) {
    return e.nodeName === "PRE" || e.nodeName === "CODE";
  }
  function Ct(e, t) {
    return (
      (e.isBlock = ne(e)),
      (e.isCode = e.nodeName === "CODE" || e.parentNode.isCode),
      (e.isBlank = xt(e)),
      (e.flankingWhitespace = Rt(e, t)),
      e
    );
  }
  function xt(e) {
    return !xe(e) && !vt(e) && /^\s*$/i.test(e.textContent) && !dt(e) && !_t(e);
  }
  function Rt(e, t) {
    if (e.isBlock || (t.preformattedCode && e.isCode)) return { leading: "", trailing: "" };
    var r = wt(e.textContent);
    return (
      r.leadingAscii && Le("left", e, t) && (r.leading = r.leadingNonAscii),
      r.trailingAscii && Le("right", e, t) && (r.trailing = r.trailingNonAscii),
      { leading: r.leading, trailing: r.trailing }
    );
  }
  function wt(e) {
    var t = e.match(/^(([ \t\r\n]*)(\s*))(?:(?=\S)[\s\S]*\S)?((\s*?)([ \t\r\n]*))$/);
    return {
      leading: t[1],
      leadingAscii: t[2],
      leadingNonAscii: t[3],
      trailing: t[4],
      trailingNonAscii: t[5],
      trailingAscii: t[6],
    };
  }
  function Le(e, t, r) {
    var i, a, n;
    return (
      e === "left" ? ((i = t.previousSibling), (a = / $/)) : ((i = t.nextSibling), (a = /^ /)),
      i &&
        (i.nodeType === 3
          ? (n = a.test(i.nodeValue))
          : r.preformattedCode && i.nodeName === "CODE"
            ? (n = !1)
            : i.nodeType === 1 && !ne(i) && (n = a.test(i.textContent))),
      n
    );
  }
  var Dt = Array.prototype.reduce,
    It = [
      [/\\/g, "\\\\"],
      [/\*/g, "\\*"],
      [/^-/g, "\\-"],
      [/^\+ /g, "\\+ "],
      [/^(=+)/g, "\\$1"],
      [/^(#{1,6}) /g, "\\$1 "],
      [/`/g, "\\`"],
      [/^~~~/g, "\\~~~"],
      [/\[/g, "\\["],
      [/\]/g, "\\]"],
      [/^>/g, "\\>"],
      [/_/g, "\\_"],
      [/^(\d+)\. /g, "$1\\. "],
    ];
  function W(e) {
    if (!(this instanceof W)) return new W(e);
    var t = {
      rules: v,
      headingStyle: "setext",
      hr: "* * *",
      bulletListMarker: "*",
      codeBlockStyle: "indented",
      fence: "```",
      emDelimiter: "_",
      strongDelimiter: "**",
      linkStyle: "inlined",
      linkReferenceStyle: "full",
      br: "  ",
      preformattedCode: !1,
      blankReplacement: function (r, i) {
        return i.isBlock
          ? `

`
          : "";
      },
      keepReplacement: function (r, i) {
        return i.isBlock
          ? `

` +
              i.outerHTML +
              `

`
          : i.outerHTML;
      },
      defaultReplacement: function (r, i) {
        return i.isBlock
          ? `

` +
              r +
              `

`
          : r;
      },
    };
    (this.options = ut({}, t, e)), (this.rules = new De(this.options));
  }
  W.prototype = {
    turndown: function (e) {
      if (!kt(e)) throw new TypeError(e + " is not a string, or an element/document/fragment node.");
      if (e === "") return "";
      var t = Ie.call(this, new Tt(e, this.options));
      return Pt.call(this, t);
    },
    use: function (e) {
      if (Array.isArray(e)) for (var t = 0; t < e.length; t++) this.use(e[t]);
      else if (typeof e == "function") e(this);
      else throw new TypeError("plugin must be a Function or an Array of Functions");
      return this;
    },
    addRule: function (e, t) {
      return this.rules.add(e, t), this;
    },
    keep: function (e) {
      return this.rules.keep(e), this;
    },
    remove: function (e) {
      return this.rules.remove(e), this;
    },
    escape: function (e) {
      return It.reduce(function (t, r) {
        return t.replace(r[0], r[1]);
      }, e);
    },
  };
  function Ie(e) {
    var t = this;
    return Dt.call(
      e.childNodes,
      function (r, i) {
        i = new Ct(i, t.options);
        var a = "";
        return (
          i.nodeType === 3
            ? (a = i.isCode ? i.nodeValue : t.escape(i.nodeValue))
            : i.nodeType === 1 && (a = Bt.call(t, i)),
          Pe(r, a)
        );
      },
      "",
    );
  }
  function Pt(e) {
    var t = this;
    return (
      this.rules.forEach(function (r) {
        typeof r.append == "function" && (e = Pe(e, r.append(t.options)));
      }),
      e.replace(/^[\t\r\n]+/, "").replace(/[\t\r\n\s]+$/, "")
    );
  }
  function Bt(e) {
    var t = this.rules.forNode(e),
      r = Ie.call(this, e),
      i = e.flankingWhitespace;
    return (i.leading || i.trailing) && (r = r.trim()), i.leading + t.replacement(r, e, this.options) + i.trailing;
  }
  function Pe(e, t) {
    var r = gt(e),
      i = ft(t),
      a = Math.max(e.length - r.length, t.length - i.length),
      n = `

`.substring(0, a);
    return r + n + i;
  }
  function kt(e) {
    return (
      e != null && (typeof e == "string" || (e.nodeType && (e.nodeType === 1 || e.nodeType === 9 || e.nodeType === 11)))
    );
  }
  var Be = W;
  var A = Ne(qe(), 1);
  async function Xt() {
    try {
      let e = window.getSelection(),
        t = "";
      if (e && e.rangeCount > 0) {
        let a = document.createElement("div"),
          n = e.getRangeAt(0);
        a.appendChild(n.cloneContents()), Ke(a), (t = a.innerHTML);
      } else {
        let a = document.cloneNode(!0);
        Ke(a), (t = new ze.Readability(a).parse().content);
      }
      t || (t = document.body.innerHTML);
      let r = new Be({ headingStyle: "atx", codeBlockStyle: "fenced", bulletListMarker: "-", hr: "---" });
      r.use(A.gfm),
        r.use(A.strikethrough),
        r.use(A.tables),
        r.use(A.taskListItems),
        r.addRule("svg", { filter: (a) => a.nodeName.toLowerCase() === "svg", replacement: (a, n) => n.outerHTML });
      let i = r.turndown(t);
      try {
        await navigator.clipboard.writeText(i), alert("Page converted to Markdown and copied to clipboard!");
      } catch {
        let n = document.createElement("textarea");
        (n.value = i), document.body.appendChild(n), n.select();
        let s = document.execCommand("copy");
        if ((document.body.removeChild(n), s)) alert("Page converted to Markdown and copied to clipboard!");
        else throw new Error("Failed to copy to clipboard");
      }
    } catch (e) {
      throw (alert("Error converting page: " + e.message), e);
    }
  }
  function Ke(e) {
    location.hostname === "chatgpt.com" &&
      (e.querySelectorAll('[data-state="closed"]').forEach((t) => {
        t.parentNode.replaceChild(document.createComment(t.textContent), t);
      }),
      e.querySelectorAll("pre").forEach((t) => {
        let r = t.querySelector("code");
        if (r) {
          let i = document.createElement("pre");
          i.appendChild(r.cloneNode(!0)), t.parentNode.replaceChild(i, t);
        }
      })),
      e.querySelectorAll("img").forEach((t) => {
        (!t.alt || t.alt.length < 3) && t.remove();
      }),
      e.querySelectorAll("a").forEach((t) => {
        t.textContent || t.remove();
      });
  }
  return st(jt);
})();
